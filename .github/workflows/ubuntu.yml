name: Release (Android, Web)

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "21"
          cache: "gradle"
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.29.1
          cache: true
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: aarch64-linux-android,armv7-linux-androideabi,x86_64-linux-android
      - name: Setup Rust tools for Android build
        run: |
          cargo install cargo-ndk
      - name: Setup Keystore
        env:
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
          ANDROID_KEY_PROPERTIES: ${{ secrets.ANDROID_KEY_PROPERTIES }}
        run: |
          echo $ANDROID_KEYSTORE | base64 --decode > ./android/app/key.jks
          echo $ANDROID_KEY_PROPERTIES | base64 --decode > ./android/key.properties
      - name: Build for Android
        env:
          SDK_REGISTRY_TOKEN: ${{ secrets.MAP_SDK_SECRET_KEY }}
          MAP_SDK_PUBLIC_KEY: ${{ secrets.MAP_SDK_PUBLIC_KEY }}
        run: |
          flutter pub get
          flutter build apk --release --dart-define=MAP_SDK_PUBLIC_KEY="$MAP_SDK_PUBLIC_KEY"
      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: ./build/app/outputs/flutter-apk/app-release.apk
      - name: Setup Rust tools for Web build
        run: |
          rustup override set nightly
          rustup component add rust-src
          rustup target add wasm32-unknown-unknown
          cargo install wasm-pack
      - name: Build for Web
        env:
          RUSTUP_TOOLCHAIN: nightly
          RUSTFLAGS: -C target-feature=+atomics,+bulk-memory,+mutable-globals
          SDK_REGISTRY_TOKEN: ${{ secrets.MAP_SDK_SECRET_KEY }}
          MAP_SDK_PUBLIC_KEY: ${{ secrets.MAP_SDK_PUBLIC_KEY }}
        run: |
          wasm-pack build -t no-modules -d ./../web/pkg --no-typescript --out-name native native -- -Z build-std=std,panic_abort
          flutter build web --release --dart-define=MAP_SDK_PUBLIC_KEY="$MAP_SDK_PUBLIC_KEY"
      - name: Upload Web Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: ./build/web
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: openhaystack
          directory: ./build/web
